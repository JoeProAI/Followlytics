rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    function isAdmin() {
      return isAuthenticated() && 
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Users collection - users can read/write their own data
    match /users/{userId} {
      allow read: if isAuthenticated() && isOwner(userId);
      allow write: if isAuthenticated() && isOwner(userId);
    }

    // Subscriptions - users can read their own subscription data
    match /subscriptions/{userId} {
      allow read: if isAuthenticated() && isOwner(userId);
      allow write: if false; // Only server-side writes via Stripe webhook
    }

    // X Tokens - users can read/write their own OAuth tokens
    match /x_tokens/{userId} {
      allow read: if isAuthenticated() && isOwner(userId);
      allow write: if isAuthenticated() && isOwner(userId);
    }

    // Scans - users can read/write their own scans
    match /scans/{scanId} {
      allow read: if isAuthenticated() && 
                     resource.data.userId == request.auth.uid;
      allow create: if isAuthenticated() && 
                       request.resource.data.userId == request.auth.uid;
      allow update: if isAuthenticated() && 
                       resource.data.userId == request.auth.uid;
      allow delete: if isAuthenticated() && 
                       resource.data.userId == request.auth.uid;
    }

    // Followers data - users can read/write their own follower data
    match /followers/{userId} {
      allow read: if isAuthenticated() && isOwner(userId);
      allow write: if isAuthenticated() && isOwner(userId);
      
      // Follower snapshots subcollection
      match /snapshots/{snapshotId} {
        allow read: if isAuthenticated() && isOwner(userId);
        allow write: if isAuthenticated() && isOwner(userId);
      }
    }

    // Analytics data - users can read/write their own analytics
    match /analytics/{userId} {
      allow read: if isAuthenticated() && isOwner(userId);
      allow write: if isAuthenticated() && isOwner(userId);
      
      // Analytics subcollections
      match /{subcollection}/{docId} {
        allow read: if isAuthenticated() && isOwner(userId);
        allow write: if isAuthenticated() && isOwner(userId);
      }
    }

    // Competitor tracking - users can read/write their own tracked competitors
    match /competitors/{userId} {
      allow read: if isAuthenticated() && isOwner(userId);
      allow write: if isAuthenticated() && isOwner(userId);
      
      match /tracked/{competitorId} {
        allow read: if isAuthenticated() && isOwner(userId);
        allow write: if isAuthenticated() && isOwner(userId);
      }
    }

    // Usage tracking - users can read their own usage data
    match /usage/{userId} {
      allow read: if isAuthenticated() && isOwner(userId);
      allow write: if false; // Only server-side writes
    }

    // API logs - admin only
    match /api_logs/{logId} {
      allow read: if isAdmin();
      allow write: if false; // Only server-side writes
    }

    // System metrics - admin only
    match /system/{document=**} {
      allow read: if isAdmin();
      allow write: if isAdmin();
    }

    // Deny all other access
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
